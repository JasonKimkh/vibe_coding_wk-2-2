---
description: 
globs: 
alwaysApply: false
---
# GitHub 관리 룰 (GitHub Management Rules)

## Pull Request (PR) 관리

### PR 생성 시 필수 사항
1. **제목**: 명확하고 간결한 제목 작성
   - `feat: 새로운 기능 추가`
   - `fix: 버그 수정`
   - `docs: 문서 업데이트`
   - `test: 테스트 코드 추가/수정`
   - `refactor: 코드 리팩토링`
   - `chore: 빌드 관련 업데이트`

2. **설명**: 다음 내용 포함
   - 변경 사항 요약
   - 테스트 결과
   - 스크린샷 (UI 변경 시)
   - 관련 이슈 번호 (`Closes #123`)

3. **체크리스트**:
   - [ ] 코드가 컨벤션을 준수합니다
   - [ ] 테스트가 모두 통과합니다
   - [ ] 문서가 업데이트되었습니다 (필요한 경우)
   - [ ] 충돌이 해결되었습니다

### PR 라벨 규칙
- `feature`: 새로운 기능
- `bugfix`: 버그 수정
- `enhancement`: 기능 개선
- `documentation`: 문서 관련
- `testing`: 테스트 관련
- `refactor`: 리팩토링
- `urgent`: 긴급 수정
- `breaking-change`: 호환성을 깨는 변경

### PR 검토 규칙
1. **자동 할당**: 코드 소유자에게 자동 할당
2. **최소 1명 이상의 승인** 필요
3. **모든 테스트 통과** 필수
4. **충돌 해결** 완료 후 병합

## Issue 관리

### Issue 생성 시 필수 사항
1. **제목**: 문제나 요청사항을 명확히 기술
2. **템플릿 사용**: 버그 리포트 또는 기능 요청 템플릿 활용
3. **라벨 지정**: 적절한 라벨 선택
4. **담당자 지정**: 가능한 경우 담당자 할당

### Issue 라벨 규칙
- `bug`: 버그 리포트
- `feature-request`: 새로운 기능 요청
- `enhancement`: 기존 기능 개선
- `question`: 질문
- `documentation`: 문서 관련
- `good-first-issue`: 초보자에게 적합한 이슈
- `help-wanted`: 도움이 필요한 이슈
- `wontfix`: 수정하지 않을 이슈
- `duplicate`: 중복 이슈
- `invalid`: 유효하지 않은 이슈

### Issue 우선순위
- `priority-high`: 높은 우선순위
- `priority-medium`: 보통 우선순위
- `priority-low`: 낮은 우선순위

### Issue 상태 관리
1. **Open**: 새로 생성된 이슈
2. **In Progress**: 작업 진행 중
3. **Review**: 검토 중
4. **Closed**: 완료된 이슈

## 자동화 규칙

### 자동 할당
- PR 생성 시 코드 소유자에게 자동 할당
- Issue 생성 시 라벨에 따라 담당자 자동 할당

### 자동 라벨링
- 파일 경로에 따른 자동 라벨 지정
- 키워드에 따른 자동 라벨 지정

### 자동 댓글
- PR 생성 시 체크리스트 자동 추가
- Issue 생성 시 템플릿 안내 자동 추가

